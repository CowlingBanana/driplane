<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Driplane on Dripline Documentation</title><link>https://matrix86.github.io/driplane/</link><description>Recent content in Driplane on Dripline Documentation</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 26 Jan 2020 04:15:05 +0900</lastBuildDate><atom:link href="https://matrix86.github.io/driplane/index.xml" rel="self" type="application/rss+xml"/><item><title>Basics</title><link>https://matrix86.github.io/driplane/doc/filters/js/basics/</link><pubDate>Wed, 16 Sep 2020 22:38:02 +0200</pubDate><guid>https://matrix86.github.io/driplane/doc/filters/js/basics/</guid><description>JS This filter allows to extend the basic driplane&amp;rsquo;s filter, defining Javascript scripts. It is based on islazy/plugin that is based on robertkrimen/otto.
Defining a JS file with our custom logic, it is possible create a complex filter.
Parameters Parameter Type Default Description path STRING empty path of the Javascript file (it can contains multiple functions) function STRING empty name of the function in the JS file to call when a Message is received .</description></item><item><title>Build and install</title><link>https://matrix86.github.io/driplane/doc/installation/build/</link><pubDate>Wed, 16 Sep 2020 22:38:02 +0200</pubDate><guid>https://matrix86.github.io/driplane/doc/installation/build/</guid><description>Build and install Launching the follow command go will take care of the downloading, the dependency resolving, the building and finally of the installation of the binary in the $GOBIN directory.
go get -u github.com/Matrix86/driplane/&amp;hellip;</description></item><item><title>Cache</title><link>https://matrix86.github.io/driplane/doc/filters/cache/</link><pubDate>Wed, 16 Sep 2020 22:38:02 +0200</pubDate><guid>https://matrix86.github.io/driplane/doc/filters/cache/</guid><description>Cache This filter introduces a simple cache mechanism in the rule. It is a TTL based cache and it can have a local visibility (cache is only visible to the current filter) or a global visibility (cache shared across ALL the rules).
If the target of the Message as input has been cached before, and his TTL is not expired, it will be dropped and not propagated to the next filter.</description></item><item><title>File</title><link>https://matrix86.github.io/driplane/doc/feeders/file/</link><pubDate>Wed, 16 Sep 2020 22:38:02 +0200</pubDate><guid>https://matrix86.github.io/driplane/doc/feeders/file/</guid><description>File feeder This feeder can create the stream starting from a file. Like the tail -f command it opens the specified file and propagates a data message if a line is being added to the file.
Parameters Parameter Type Default Description filename STRING empty the path of the file that it has to keep track toend BOOL &amp;ldquo;false&amp;rdquo; the feeder will start to create data messages only for new added lines .</description></item><item><title>First look</title><link>https://matrix86.github.io/driplane/doc/rules/definition/</link><pubDate>Wed, 16 Sep 2020 22:38:02 +0200</pubDate><guid>https://matrix86.github.io/driplane/doc/rules/definition/</guid><description>First look Driplane include a simple language to define where get the stream and what operation exec, or how to filter the data.
In the rule could be defined 3 type of nodes:
FEEDER : it is the node responsible for creating of a stream of data (read every changes on a file, get tweets from Twitter, etc..)
FILTER : it receives data from a feeder or another filter and checks some conditions on them or makes some changes on them.</description></item><item><title>Changed</title><link>https://matrix86.github.io/driplane/doc/filters/changed/</link><pubDate>Wed, 16 Sep 2020 22:38:02 +0200</pubDate><guid>https://matrix86.github.io/driplane/doc/filters/changed/</guid><description>Changed This filter is similar to the cache. It can only stop the propagation of the Message across the lane, but only if the target of the received Message is different from the previous one.
Parameters Parameter Type Default Description target STRING &amp;ldquo;main&amp;rdquo; the field of the Message that should be used for the filter (it could be main or and extra field) .</description></item><item><title>Docker</title><link>https://matrix86.github.io/driplane/doc/installation/docker/</link><pubDate>Wed, 16 Sep 2020 22:38:02 +0200</pubDate><guid>https://matrix86.github.io/driplane/doc/installation/docker/</guid><description>Docker driplane is containerized using a really lightweight Linux distribution called Alpine Linux.
To pull the latest image version:
docker pull matrix86/driplane To run it:
docker run &amp;ndash;rm -v config:/app/config -it matrix86/driplane:latest -config config/config.yaml where the config directory contains the config.yaml file, the rule directory, the js directory and the templates directory.
(Link to the Docker repository)[https://hub.docker.com/repository/docker/matrix86/driplane]</description></item><item><title>Entrypoint</title><link>https://matrix86.github.io/driplane/doc/filters/js/entrypoint/</link><pubDate>Wed, 16 Sep 2020 22:38:02 +0200</pubDate><guid>https://matrix86.github.io/driplane/doc/filters/js/entrypoint/</guid><description>Entrypoint The JS file should consist of one or more functions, and they can be used in different filters or in combination between them.
The function has to respect some constraints:
the function&amp;rsquo;s name contained in the function parameter of the filter has to start with a capital letter; the function prototype should accept 3 variables; the function has to return a JS object with at least the filtered field; Function&amp;rsquo;s prototype The function&amp;rsquo;s name specified in the function parameter of the filter, receives 3 input parameters:</description></item><item><title>Plugin Packages</title><link>https://matrix86.github.io/driplane/doc/filters/js/packages/</link><pubDate>Wed, 16 Sep 2020 22:38:02 +0200</pubDate><guid>https://matrix86.github.io/driplane/doc/filters/js/packages/</guid><description>Packages Since the JS doesn&amp;rsquo;t have all the useful functions to perform operations like on file manipulation or http request (see otto docs for more info), driplane maps and export to the JS environment some Go functions as packages.
These mapped functions are not definitive and they could change over time. File This package contains functions for manipulating files.
Return The return value will be a JS object containing 2 fields:</description></item><item><title>RSS</title><link>https://matrix86.github.io/driplane/doc/feeders/rss/</link><pubDate>Wed, 16 Sep 2020 22:38:02 +0200</pubDate><guid>https://matrix86.github.io/driplane/doc/feeders/rss/</guid><description>RSS This feeder create a stream starting from a feed RSS, ATOM or JSON.
It is based on gofeed so you can refer to it for more info and supported formats.
Parameters Parameter Type Default Description url STRING empty URL of the feed freq DURATION 60s how often the feed should be parsed start_from_beginning BOOL &amp;ldquo;false&amp;rdquo; start to parse from the beginning of the feed .</description></item><item><title>Syntax</title><link>https://matrix86.github.io/driplane/doc/rules/syntax/</link><pubDate>Wed, 16 Sep 2020 22:38:02 +0200</pubDate><guid>https://matrix86.github.io/driplane/doc/rules/syntax/</guid><description>Syntax The syntax of the driplane&amp;rsquo;s rules is really simple. Like for the BASH every filter&amp;rsquo;s output is sended to the next filter&amp;rsquo;s input concatenating the two of them with the | character.
All the rules have to start with a name and end with a ; char.
Rule Name and Rule Call Each rule have to start with an identifier follow by =&amp;gt;. This identifier identifies rule name and it could be used in another rule to concatenate 2 rule together.</description></item><item><title>Echo</title><link>https://matrix86.github.io/driplane/doc/filters/echo/</link><pubDate>Wed, 16 Sep 2020 22:38:02 +0200</pubDate><guid>https://matrix86.github.io/driplane/doc/filters/echo/</guid><description>Echo This filter print the Message on the logs. Mostly used to debug the rules.
Parameters Parameter Type Default Description extra BOOL &amp;ldquo;false&amp;rdquo; print also all the extra fields ... | echo(extra=&amp;quot;false&amp;quot;) | ...
Output The output is not be changed. This filter prints the received Message and send it to the next filter in the rule.
Examples Soon&amp;hellip;</description></item><item><title>Twitter</title><link>https://matrix86.github.io/driplane/doc/feeders/twitter/</link><pubDate>Wed, 16 Sep 2020 22:38:02 +0200</pubDate><guid>https://matrix86.github.io/driplane/doc/feeders/twitter/</guid><description>Twitter This feeder creates a stream from tweets. It is possible to define the keywords, or the users to follow.
Based on go-twitter
Parameters Parameter Type Default Description consumerKey STRING empty Twitter Auth consumerSecret STRING empty Twitter Auth accessToken STRING empty Twitter Auth accessSecret STRING empty Twitter Auth keywords STRING empty comma separated keywords that should match on the tweets users STRING empty comma separated users list languages STRING empty filter by language disable_retweet BOOL &amp;ldquo;false&amp;rdquo; don&amp;rsquo;t include retweets in the stream disable_quoted BOOL &amp;ldquo;false&amp;rdquo; don&amp;rsquo;t include quoted tweets in the stream .</description></item><item><title>Format</title><link>https://matrix86.github.io/driplane/doc/filters/format/</link><pubDate>Wed, 16 Sep 2020 22:38:02 +0200</pubDate><guid>https://matrix86.github.io/driplane/doc/filters/format/</guid><description>Format This filter is used to format the received Message. It is based on the Golang templates it can load templates from the template_path directory specified in the configuration file.
Parameters Parameter Type Default Description type STRING &amp;ldquo;text&amp;rdquo; specify the type of template to use : &amp;quot;text&amp;quot; or &amp;quot;html&amp;quot; template STRING empty a template could be specified directly here, instead of load it from file file STRING empty load the template from file In the template is allowed to use all the fields of the received Message: main or extra.</description></item><item><title>Web</title><link>https://matrix86.github.io/driplane/doc/feeders/web/</link><pubDate>Wed, 16 Sep 2020 22:38:02 +0200</pubDate><guid>https://matrix86.github.io/driplane/doc/feeders/web/</guid><description>Web This feeder creates a stream starting from a web page. It is possible to define how often the page should be downloaded and parsed.
Every time the page is parsed a Message is sent down the lane.
Parameters Parameter Type Default Description url STRING empty URL of the web page freq DURATION 60s how often the page should be parsed text_only BOOL &amp;ldquo;false&amp;rdquo; if &amp;ldquo;true&amp;rdquo; it removes all the tags from the page method STRING &amp;ldquo;GET&amp;rdquo; HTTP method to use on the requests headers JSON empty Headers to use in the request data JSON empty POST fields to send with the requests (it&amp;rsquo;s not possible to use in combination with rawData) rawData STRING empty raw body of the requests (it&amp;rsquo;s not possible to use in combination with data) status STRING empty the filter will propagate the Message only if the returned status is this cookies STRING empty Path of the JSON file containing the cookies to use .</description></item><item><title>Hash</title><link>https://matrix86.github.io/driplane/doc/filters/hash/</link><pubDate>Wed, 16 Sep 2020 22:38:02 +0200</pubDate><guid>https://matrix86.github.io/driplane/doc/filters/hash/</guid><description>Hash This filter is used to search or extract hashes from a Message.
Supported types of hashes are:
MD5 SHA1 SHA256 SHA512 Parameters Parameter Type Default Description target STRING &amp;ldquo;main&amp;rdquo; the field of the Message that should be used for the filter (it could be main or an extra field) extract BOOL &amp;ldquo;false&amp;rdquo; if &amp;quot;true&amp;quot; the main field of the output Message will be the extracted hash md5 BOOL &amp;ldquo;true&amp;rdquo; if &amp;quot;false&amp;quot; md5 hashes will be ignored sha1 BOOL &amp;ldquo;true&amp;rdquo; if &amp;quot;false&amp;quot; sha1 hashes will be ignored sha256 BOOL &amp;ldquo;true&amp;rdquo; if &amp;quot;false&amp;quot; sha256 hashes will be ignored sha512 BOOL &amp;ldquo;true&amp;rdquo; if &amp;quot;false&amp;quot; sha512 hashes will be ignored .</description></item><item><title>Http</title><link>https://matrix86.github.io/driplane/doc/filters/http/</link><pubDate>Wed, 16 Sep 2020 22:38:02 +0200</pubDate><guid>https://matrix86.github.io/driplane/doc/filters/http/</guid><description>HTTP This filter allows you to send HTTP requests. When a Message arrives to the filter, we can decide if use the main field of the Message as URL on the request, or its content for the HTTP data.
This behaviour can be handle with the parameters.
Parameters Parameter Type Default Description url STRING empty URL of the web page. It is possible use the Golang templates to use fields of the Message text_only BOOL &amp;ldquo;false&amp;rdquo; if &amp;ldquo;true&amp;rdquo; it removes all the tags from the body response method STRING &amp;ldquo;GET&amp;rdquo; HTTP method to use on the request headers JSON empty Headers to use in the request data JSON empty POST fields to send with the request (it&amp;rsquo;s not possible to use in combination with rawData) rawData STRING empty raw body of the request (it&amp;rsquo;s not possible to use in combination with data) status STRING empty the filter will propagate the Message only if the returned status has the specified value cookies STRING empty Path of the JSON file containing the cookies to use .</description></item><item><title>Mail</title><link>https://matrix86.github.io/driplane/doc/filters/mail/</link><pubDate>Wed, 16 Sep 2020 22:38:02 +0200</pubDate><guid>https://matrix86.github.io/driplane/doc/filters/mail/</guid><description>Mail This filter allows you to send e-mail. When a Message arrives to the filter, we can decide if use the main field of the Message as URL on the request, or its content for the HTTP data.
This behaviour can be handle with the parameters.
Parameters Parameter Type Default Description body STRING empty the body of the e-mail (supports Golang templates) username STRING empty username for the host authentication password STRING empty password for the host authentication host STRING empty host server used to send the e-mail port STRING empty port of the host server fromAddr STRING empty source e-mail address fromName STRING empty source name address to STRING empty destination e-mail address (supports multi-destination, comma separated) subject STRING empty subject field of the e-mail to send use_auth BOOL &amp;ldquo;false&amp;rdquo; if &amp;ldquo;true&amp;rdquo; the sendmail server will receive the credentials specified in username and password fields .</description></item><item><title>Override</title><link>https://matrix86.github.io/driplane/doc/filters/override/</link><pubDate>Wed, 16 Sep 2020 22:38:02 +0200</pubDate><guid>https://matrix86.github.io/driplane/doc/filters/override/</guid><description>Override This filter allows you to change a field of a Message, before to sent it to the next filter. Template can be used.
Parameters Parameter Type Default Description name STRING empty name of the field to change (supports Golang templates) value STRING empty new value to assign to the Message&amp;rsquo;s field specified (supports Golang templates) ... | override(name=&amp;quot;description&amp;quot;, value=&amp;quot;{{ .</description></item><item><title>System</title><link>https://matrix86.github.io/driplane/doc/filters/system/</link><pubDate>Wed, 16 Sep 2020 22:38:02 +0200</pubDate><guid>https://matrix86.github.io/driplane/doc/filters/system/</guid><description>System This filter allows you to exec a command on the host machine. The received Message can be used to create the command to launch.
It supports Golang templates (only text.Template).
Parameters Parameter Type Default Description cmd STRING empty command line to exec for each received Message (supports Golang templates) ... | system(cmd=&amp;quot;echo '{{ .author }} wrote {{ .main }}' &amp;gt;&amp;gt; logs.</description></item><item><title>Text</title><link>https://matrix86.github.io/driplane/doc/filters/text/</link><pubDate>Wed, 16 Sep 2020 22:38:02 +0200</pubDate><guid>https://matrix86.github.io/driplane/doc/filters/text/</guid><description>Text This filter searches or extracts strings from the received Message. It can be used with a regular expression or a simple string.
If the string is found, the condition is matched and the Message is propagated to the next filter.
Parameters Parameter Type Default Description target STRING &amp;ldquo;main&amp;rdquo; the field of the Message that should be used for the filter (it could be main or and extra field) regexp STRING empty regular expression to search or extract one or more strings extract BOOL &amp;ldquo;false&amp;rdquo; if &amp;ldquo;true&amp;rdquo; the main field of the propagated Message will contain the extracted string (it can be used only if regexp parameter is specified) text STRING specifies the string that should be matched on the Message to check the condition .</description></item><item><title>Url</title><link>https://matrix86.github.io/driplane/doc/filters/url/</link><pubDate>Wed, 16 Sep 2020 22:38:02 +0200</pubDate><guid>https://matrix86.github.io/driplane/doc/filters/url/</guid><description>Url This filter is used to search or extract URLs from a Message.
Currently supported types of URLs are:
http/s ftp Parameters Parameter Type Default Description target STRING &amp;ldquo;main&amp;rdquo; the field of the Message that should be used for the filter (it could be main or an extra field) http BOOL &amp;ldquo;true&amp;rdquo; if &amp;ldquo;false&amp;rdquo;, http scheme urls are ignored https BOOL &amp;ldquo;true&amp;rdquo; if &amp;ldquo;false&amp;rdquo;, https scheme urls are ignored ftp BOOL &amp;ldquo;true&amp;rdquo; if &amp;ldquo;false&amp;rdquo;, ftp scheme urls are ignored extract BOOL &amp;ldquo;true&amp;rdquo; if &amp;ldquo;true&amp;rdquo;, the main field of the propagated Message will contain the found URL .</description></item></channel></rss>